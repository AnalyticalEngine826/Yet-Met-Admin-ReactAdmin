{"version":3,"sources":["lib/methods.js","lib/RestProvider.js","lib/AuthProvider.js","components/CommnetListField.js","components/ConditionBooleanField.js","components/AudioPlayerField.js","components/ApproveButton.js","components/RejectButton.js","models/Users.js","App.js","serviceWorker.js","index.js"],"names":["convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","rawFile","onload","result","onerror","getImageSize","img","document","createElement","width","this","height","src","upload","fieldName","submitedData","id","resourceName","resourcePath","a","Array","isArray","name","ref","firebase","storage","child","put","snapshot","getDownloadURL","downloadURL","uploadedAt","Date","type","indexOf","imageSize","console","error","save","data","previous","firebaseSaveFilter","uploadResults","isNew","timestampFieldNames","map","uploadResult","Object","assign","createdAt","updatedAt","firestore","doc","set","del","uploadFields","log","database","remove","delMany","ids","previousData","delete","getOne","params","resourceData","path","dbRef","once","then","snapshots","forEach","snapshotss","key","val","Error","getList","pagination","values","exists","push","filter","item","meetsFilters","keys","sort","sortBy","order","field","i","page","perPage","_start","_end","slice","total","length","catch","setApprove","record","userId","activate","setReject","getMany","getManyReference","target","getItemID","itemId","collection","CREATE","addUploadFeature","requestHandler","resource","image","formerPictures","p","File","newPictures","all","base64Pictures","picture64","title","transformedNewPictures","BaseConfiguration","initialQuerytimeout","RestProvider","firebaseConfig","options","trackedResources","resourcesStatus","resourcesData","resourcesPaths","resourcesUploadFields","apps","initializeApp","auth","setPersistence","Auth","Persistence","SESSION","Methods","index","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","DELETE","DELETE_MANY","UPDATE","uploads","currentData","baseConfig","userProfilePath","userAdminProp","localStorageTokenName","handleAuthStateChange","config","user","uid","get","profile","getIdToken","firebaseToken","localStorage","setItem","signOut","removeItem","firebaseLoaded","onAuthStateChanged","AUTH_LOGOUT","currentUser","reload","AUTH_CHECK","AUTH_GET_PERMISSIONS","getIdTokenResult","token","claims","AUTH_LOGIN","username","password","alreadySignedIn","signInWithEmailAndPassword","CommentListField","dataProvider","useDataProvider","useState","setTotal","setData","loading","setLoading","setError","useEffect","voice_doc_id","Loading","Table","TableHead","TableRow","TableCell","TableBody","value","created_timestamp","address","controls","voice_url","TextField","no","source","defaultProps","addLabel","reports","false","true","ConditionBooleanField","style","color","AudioPlayerField","backgroundColor","textAlign","disablestyle","ApproveButton","Button","disalbed","label","disabled","onClick","RejectButton","UserList","props","List","bulkActionButtons","Datagrid","rowClick","ImageField","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authConfig","App","Admin","authProvider","AuthProvider","Resource","list","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.29159d8e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport sortBy from 'sort-by';\nimport { CREATE } from 'react-admin';\n\n\n\nconst convertFileToBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n  });\n\nconst addUploadFeature = requestHandler => (type, resource, params) => {\n  if (type === 'UPDATE') {\n    if (params.data.image && params.data.image.length) {\n      const formerPictures = params.data.image.filter(p => !(p.rawFile instanceof File));\n      const newPictures = params.data.image.filter(p => p.rawFile instanceof File);\n\n      return Promise.all(newPictures.map(convertFileToBase64))\n        .then(base64Pictures =>\n          base64Pictures.map(picture64 => ({\n            src: picture64,\n            title: `${params.data.title}`\n          }))\n        )\n        .then(transformedNewPictures =>\n          requestHandler(type, resource, {\n            ...params,\n            data: {\n              ...params.data,\n              image: [...transformedNewPictures, ...formerPictures]\n            }\n          })\n        );\n    }\n  }\n  // for other request types and reources, fall back to the defautl request handler\n  return requestHandler(type, resource, params);\n};\n\nconst getImageSize = file => {\n  return new Promise(resolve => {\n    const img = document.createElement('img');\n    img.onload = function() {\n      resolve({\n        width: this.width,\n        height: this.height\n      });\n    };\n    img.src = file.src;\n  });\n};\n\nconst upload = async (fieldName, submitedData, id, resourceName, resourcePath) => {\n  let file = submitedData[fieldName];\n  if (!file) {\n    return false;\n  }\n  \n  file = Array.isArray(file) ? file[0] : file;\n  \n  const rawFile = file.rawFile;\n\n  const result = {};\n  if (file && rawFile && rawFile.name) {\n    const ref = firebase\n      .storage()\n      .ref()\n      .child(`${resourcePath}/${id}/${fieldName}`);\n    const snapshot = await ref.put(rawFile);\n    const downloadURL = await snapshot.ref.getDownloadURL();\n    result[fieldName] = [{}];\n    result[fieldName][0].uploadedAt = new Date();\n    result[fieldName][0].src = downloadURL;\n    result[fieldName][0].type = rawFile.type;\n    result[fieldName][0].name = rawFile.name;\n    if (rawFile.type.indexOf('image/') === 0) {\n      try {\n        const imageSize = await getImageSize(file);\n        result[fieldName][0].width = imageSize.width;\n        result[fieldName][0].height = imageSize.height;\n      } catch (e) {\n        console.error(`Failed to get image dimensions`);\n      }\n    }\n    return result;\n  }\n  return false;\n};\n\nconst save = async (\n  id,\n  data,\n  previous,\n  resourceName,\n  resourcePath,\n  firebaseSaveFilter,\n  uploadResults,\n  isNew,\n  timestampFieldNames\n) => {\n  if (uploadResults) {\n    uploadResults.map(uploadResult => (uploadResult ? Object.assign(data, uploadResult) : false));\n  }\n\n  if (isNew) {\n    Object.assign(data, { [timestampFieldNames.createdAt]: new Date() });\n  }\n\n  data = Object.assign(previous, { [timestampFieldNames.updatedAt]: new Date() }, data);\n\n  if (!data.id) {\n    data.id = id;\n  }\n\n  await firebase\n    .firestore()\n    .doc(`${resourcePath}/${data.id}`)\n    .set(firebaseSaveFilter(data));\n  return { data };\n};\n\nconst del = async (id, resourceName, resourcePath, uploadFields) => {\n  // if (uploadFields.length) {\n  //   uploadFields.map(fieldName =>\n  //     firebase\n  //       .storage()\n  //       .ref()\n  //       .child(`${resourcePath}/${id}/${fieldName}`)\n  //       .delete()\n  //   );\n  // }\n\n  // await firebase\n  //   .firestore()\n  //   .doc(`${resourcePath}/${id}`)\n  //   .delete();\n  // return { data: id };\n  console.log('this is delete id===>',id);\n  await firebase.database.ref.child('users').child(id).remove();\n  return { data: id };\n};\n\nconst delMany = async (ids, resourceName, previousData) => {\n  console.log('this is delete ids===>',ids);\n  await ids.map(id =>\n    firebase\n      .firestore()\n      .doc(`${resourceName}/${id}`)\n      .delete()\n  );\n  return { data: ids };\n};\n\nconst getItemID = (params, type, resourceName, resourcePath, resourceData) => {\n  let itemId = params.data.id || params.id || params.data.key || params.key;\n  if (!itemId) {\n    itemId = firebase\n      .firestore()\n      .collection(resourcePath)\n      .doc().id;\n  }\n\n  if (!itemId) {\n    throw new Error('ID is required');\n  }\n\n  if (resourceData && resourceData[itemId] && type === CREATE) {\n    throw new Error('ID already in use');\n  }\n\n  return itemId;\n};\n\nconst getOne = async (params, resourceName, resourceData) => {\n  const path = \"/users/\" + params.id + \"/\";\n  const dbRef = firebase.database().ref(path);\n  if (params.id) {\n    // console.log('this is id==>', params.id);\n    return await dbRef.once('value').then(async (snapshots) =>{\n      var result = {};\n        //console.log('this is before one snapshots==>', snapshots);\n      if (snapshots != null) {\n        // console.log('this is one snapshots==>', snapshots.key);\n        snapshots.forEach((snapshotss) =>{\n          // console.log('this is one snapshotss==>', snapshotss.val());\n          if (snapshotss.key == 'userId'){\n            const id = snapshotss.val();\n            //console.log('this is userid==>', id);\n            if (id != null){\n              var data = snapshots.val();\n              data['id'] = id;\n              console.log('this is user==>', data);\n              result = { data: data };\n            }\n          }\n        });\n        return result;\n      } else{\n        throw new Error('Id not found');\n      }\n    });\n  }else{\n    throw new Error('Id not found');\n  }\n  \n  // if (params.id) {\n  //   let result = await firebase\n  //     .firestore()\n  //     .collection(resourceName)\n  //     .doc(params.id)\n  //     .get();\n\n  //   if (result.exists) {\n  //     const data = result.data();\n\n  //     if (data && data.id == null) {\n  //       data['id'] = result.id;\n  //     }\n  //     return { data: data };\n  //   } else {\n  //     throw new Error('Id not found');\n  //   }\n  // } else {\n  //   throw new Error('Id not found');\n  // }\n};\n\n/**\n * params example:\n * pagination: { page: 1, perPage: 5 },\n * sort: { field: 'title', order: 'ASC' },\n * filter: { author_id: 12 }\n */\n\nconst getList = async (params, resourceName, resourceData) => {\n  if (params.pagination) {\n      let values = [];\n\n      const dbRef = firebase.database().ref(\"/users\");\n      \n      return await dbRef.once('value').then(async (snapshots) => {\n        \n        if (snapshots.exists()) {\n          //console.log('this is snameshot value ==>' ,snapshots.val());\n          //console.log('data type==>', typeof (snapshots.val()))\n          snapshots.forEach((snapshotss) =>{\n            //console.log('this is snapshot ===> ', snapshotss);\n            //console.log('this is snapshotss value ===> ', snapshotss.val());\n            var data = snapshotss.val();\n            //console.log('this is data==>',data);\n            \n            snapshotss.forEach((snapshot) =>{\n              //console.log('this is snapshot ===> ', snapshot.key);\n              if (snapshot.key == 'userId'){\n                // console.log('this is snapshot userid ===> ', snapshot.val());\n                data['id'] = snapshot.val();\n              }\n              if (snapshot.key == 'gender'){\n                const gender = snapshot.val();\n                if (gender == 2){\n                  values.push(data);\n                }\n              }\n            });\n          });\n          if (params.filter) {\n            values = values.filter(item => {\n              let meetsFilters = true;\n              for (const key of Object.keys(params.filter)) {\n                meetsFilters = item[key] === params.filter[key];\n              }\n              return meetsFilters;\n            });\n          }\n          if (params.sort) {\n            values.sort(sortBy(`${params.sort.order === 'ASC' ? '' : '-'}${params.sort.field}`));\n          }\n          const keys = values.map(i => i.id);\n          const { page, perPage } = params.pagination;\n          const _start = (page - 1) * perPage;\n          const _end = page * perPage;\n          const data = values ? values.slice(_start, _end) : [];\n          const ids = keys.slice(_start, _end) || [];\n          const total = values ? values.length : 0;\n          // console.log('total count===> ', values.length);\n          // console.log('ids===> ', ids);\n          // console.log('data===> ', data);\n          // console.log(\"got a data from realtime database\");\n          return { data, ids, total };\n        } else {\n          console.log(\"No data available\");\n        }\n      }).catch((error) => {\n        console.error(error);\n    });\n  } else {\n    throw new Error('Error processing request');\n  }\n};\n\nconst setApprove = async (record) => {\n  if (record.userId) {\n    record.activate = true;\n    record.id = null;\n    firebase.database().ref('users/' + record.userId).set(record, (error) => {\n      if (error) {\n        throw new Error('write error');\n      } else {\n        return true;\n      }\n    });\n  }else {\n    throw new Error('User not found');\n  }\n};\n\nconst setReject = async (record) => {\n  if (record.userId) {\n    record.activate = false;\n    record.id = null;\n    firebase.database().ref('users/' + record.userId).set(record, (error) => {\n      if (error) {\n        throw new Error('write error');\n      } else {\n        return true;\n      }\n    });\n  }else {\n    throw new Error('User not found');\n  }\n};\n\nconst getMany = async (params, resourceName, resourceData) => {\n  let data = [];\n  /* eslint-disable no-await-in-loop */\n  for (const id of params.ids) {\n    let { data: item } = await getOne({ id }, resourceName, resourceData);\n    data.push(item);\n  }\n  return { data };\n};\n\nconst getManyReference = async (params, resourceName, resourceData) => {\n  if (params.target) {\n    if (!params.filter) params.filter = {};\n    params.filter[params.target] = params.id;\n    let { data, total } = await getList(params, resourceName, resourceData);\n    return { data, total };\n  } else {\n    throw new Error('Error processing request');\n  }\n};\n\nexport default {\n  upload,\n  save,\n  del,\n  delMany,\n  getItemID,\n  getOne,\n  getList,\n  getMany,\n  getManyReference,\n  addUploadFeature,\n  convertFileToBase64,\n  setApprove,\n  setReject\n};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport Methods from './methods';\n\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE, DELETE_MANY } from 'react-admin';\n\n/**\n * @param {string[]|Object[]} trackedResources Array of resource names or array of Objects containing name and\n * optional path properties (path defaults to name)\n * @param {Object} firebaseConfig Options Firebase configuration\n */\n\nconst BaseConfiguration = {\n  initialQuerytimeout: 10000,\n  timestampFieldNames: {\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt'\n  }\n};\n\nconst RestProvider = (firebaseConfig = {}, options = {}) => {\n  options = Object.assign({}, BaseConfiguration, options);\n  const { timestampFieldNames, trackedResources } = options;\n\n  const resourcesStatus = {};\n  // const resourcesReferences = {};\n  const resourcesData = {};\n  const resourcesPaths = {};\n  const resourcesUploadFields = {};\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\n  }\n\n  /* Functions */\n  const upload = options.upload || Methods.upload;\n  const save = options.save || Methods.save;\n  const del = options.del || Methods.del;\n  const getItemID = options.getItemID || Methods.getItemID;\n  const getOne = Methods.getOne;\n  const getMany = options.getMany || Methods.getMany;\n  const getManyReference = options.getManyReference || Methods.getManyReference;\n  const delMany = options.delMany || Methods.delMany;\n  const getList = Methods.getList;\n\n  const firebaseSaveFilter = options.firebaseSaveFilter ? options.firebaseSaveFilter : data => data;\n  // const firebaseGetFilter = options.firebaseGetFilter ? options.firebaseGetFilter : data => data;\n\n  // Sanitize Resources\n  trackedResources.map((resource, index) => {\n    if (typeof resource === Array) {\n      resource = {\n        name: resource['name'],\n        path: resource['path'] || resource['name'],\n        uploadFields: resource['uploadFields'] || []\n      };\n      trackedResources[index] = resource;\n    }\n\n    const { name, path, uploadFields } = resource;\n    if (!resource.name) {\n      throw new Error(`name is missing from resource ${resource}`);\n    }\n    resourcesUploadFields[name] = uploadFields || [];\n    resourcesPaths[name] = path || name;\n    resourcesData[name] = {};\n  });\n\n  /**\n   * @param {string} type Request type, e.g GET_LIST\n   * @param {string} resourceName Resource name, e.g. \"posts\"\n   * @param {Object} payload Request parameters. Depends on the request type\n   * @returns {Promise} the Promise for a REST response\n   */\n\n  return async (type, resourceName, params) => {\n    await resourcesStatus[resourceName];\n    let result = null;\n    switch (type) {\n      case GET_LIST:\n        // console.log('GET_LIST');\n        result = await getList(params, resourceName, resourcesData[resourceName]);\n        // result = {\n        //   data: [\n        //           { id: 126, name: \"allo?\", birthday: 12 },\n        //           { id: 127, name: \"bien le bonjour\", birthday: 12 },\n        //           { id: 124, name: \"good day sunshine\", birthday: 12 },\n        //           { id: 123, name: \"hello, world\", birthday: 12 },\n        //           { id: 125, name: \"howdy partner\", birthday: 12 },\n        //       ],\n        //       total: 27\n        // }\n        //console.log('this is result==>', result);\n        return result;\n      case GET_MANY:\n        result = await getMany(params, resourceName, resourcesData[resourceName]);\n        // console.log('GET_MANY');\n        return result;\n\n      case GET_MANY_REFERENCE:\n        // console.log('GET_MANY_REFERENCE');\n        result = await getManyReference(params, resourceName, resourcesData[resourceName]);\n        return result;\n\n      case GET_ONE:\n        // console.log('GET_ONE');\n        result = await getOne(params, resourceName, resourcesData[resourceName]);\n        console.log('this is one result==>', result);\n        return result;\n\n      case DELETE:\n        // console.log('DELETE');\n        const uploadFields = resourcesUploadFields[resourceName] ? resourcesUploadFields[resourceName] : [];\n        result = await del(params.id, resourceName, resourcesPaths[resourceName], uploadFields);\n        return result;\n\n      case DELETE_MANY:\n        // console.log('DELETE_MANY');\n        result = await delMany(params.ids, resourceName, resourcesData[resourceName]);\n        return result;\n      case UPDATE:\n      case CREATE:\n        // console.log('UPDATE/CREATE');\n        let itemId = getItemID(params, type, resourceName, resourcesPaths[resourceName], resourcesData[resourceName]);\n        const uploads = resourcesUploadFields[resourceName]\n          ? resourcesUploadFields[resourceName].map(field =>\n              upload(field, params.data, itemId, resourceName, resourcesPaths[resourceName])\n            )\n          : [];\n        \n        const currentData = resourcesData[resourceName][itemId] || {};\n        const uploadResults = await Promise.all(uploads);\n        \n        result = await save(\n          itemId,\n          params.data,\n          currentData,\n          resourceName,\n          resourcesPaths[resourceName],\n          firebaseSaveFilter,\n          uploadResults,\n          type === CREATE,\n          timestampFieldNames\n        );\n        return result;\n\n      default:\n        console.error('Undocumented method: ', type);\n        return { data: [] };\n    }\n  };\n};\n\nexport default RestProvider;","/* globals localStorage */\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS } from 'react-admin';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst baseConfig = {\n  userProfilePath: '/users/',\n  userAdminProp: 'isAdmin',\n  localStorageTokenName: 'RAFirebaseClientToken',\n  handleAuthStateChange: async (auth, config) => {\n    console.log('user uid==>', auth.user.uid);\n    console.log('user auth==>', auth);\n    if (auth) {\n      const snapshot = await firebase\n        .firestore()\n        .doc(config.userProfilePath + auth.user.uid)\n        .get();\n      //console.log('user snapshot==>', snapshot); \n      const profile = snapshot.data();\n      \n      if (profile && profile[config.userAdminProp]) {\n        const firebaseToken = await auth.user.getIdToken();\n        console.log(\"this is firebaseToken ===> \",firebaseToken);\n        let user = { auth, profile, firebaseToken };\n        localStorage.setItem(config.localStorageTokenName, firebaseToken);\n        return user;\n      } else {\n        firebase.auth().signOut();\n        localStorage.removeItem(config.localStorageTokenName);\n        //console.log(\"first error\");\n        throw new Error('sigin error');\n      }\n    } else {\n      localStorage.removeItem(config.localStorageTokenName);\n      //console.log(\"second error\");\n      throw new Error('sigin error');\n    }\n  }\n};\n\nexport default (config = {}) => {\n  config = { ...baseConfig, ...config };\n\n  const firebaseLoaded = () =>\n    new Promise(resolve => {\n      firebase.auth().onAuthStateChanged(resolve);\n    });\n\n  return async (type, params) => {\n    if (type === AUTH_LOGOUT) {\n      config.handleAuthStateChange(null, config).catch(() => {});\n      return firebase.auth().signOut();\n    }\n\n    if (firebase.auth().currentUser) {\n      await firebase.auth().currentUser.reload();\n    }\n\n    if (type === AUTH_CHECK) {\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        //console.log(\"third error\");\n        throw new Error('sigin error');\n      }\n\n      return true;\n    }\n\n    if (type === AUTH_GET_PERMISSIONS) {\n      console.log('AUTH_GET_PERMISSIONS');\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        //console.log(\"permission error\");\n        throw new Error('permission error');\n      }\n\n      const token = await firebase.auth().currentUser.getIdTokenResult();\n      return token.claims;\n    }\n\n    if (type === AUTH_LOGIN) {\n      const { username, password, alreadySignedIn } = params;\n      let auth = firebase.auth().currentUser;\n\n      if (!auth || !alreadySignedIn) {\n        auth = await firebase.auth().signInWithEmailAndPassword(username, password);\n      }\n\n      return config.handleAuthStateChange(auth, config);\n    }\n\n    return false;\n  };\n};","import React, { useState, useEffect } from 'react';\nimport {\n  TextField\n} from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst CommentListField = ({ record }) => {\n\n    const dataProvider = useDataProvider();\n    const [total, setTotal] = useState();\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const comments = {\n      no: \"No Comment\"\n    }\n    useEffect(() => {\n        dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n            .then(({ data, total }) => {\n                setTotal(total);  \n                setData(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n  \n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    if (!total) return <TextField record={comments} source=\"no\" />;\n    if (!data) return [];\n  \n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Location</TableCell>\n            <TableCell>Voice</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(value => {\n            return (\n              <TableRow key={value.created_timestamp}>\n                <TableCell>{value.address}</TableCell>\n                <TableCell><audio controls src={value.voice_url} /></TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    );\n  };\n  \n  CommentListField.defaultProps = {\n    addLabel: true,\n  };\n\n  export default CommentListField;","import { green } from '@material-ui/core/colors';\nimport React from 'react';\nimport {\n  TextField\n} from 'react-admin';\n\nconst reports = {\n    false: \"Not Approved yet\",\n    true: \"Approved by Admin\"\n}\n\nconst ConditionBooleanField = ({ record, ...rest }) => {\n    //console.log('this is record record===>',record.activate);\n    return record.activate\n        ? <TextField style = {{color: 'green'}} record={reports} source=\"true\" />\n        : <TextField style = {{color: \"red\"}} record={reports} source=\"false\" />;\n}\n\nConditionBooleanField.defaultProps = {\n    addLabel: true,\n};\n\nexport default ConditionBooleanField;\n","import React from 'react';\n\nconst AudioPlayerField = ({ record }) => (\n    <audio controls src={record.voice_url} />\n);\n\nAudioPlayerField.defaultProps = {\n    addLabel: true,\n};\n\nexport default AudioPlayerField;","import React from 'react';\nimport Methods from '../lib/methods';\n\n\n\nimport {\n  Button\n} from 'react-admin';\nconst style = {backgroundColor:'green', width: 120, height: 35, textAlign: 'center', color: 'white'};\nconst disablestyle = {backgroundColor:'darkGray', width: 120, height: 35, textAlign: 'center', color: 'white'};\nconst ApproveButton = ({ record, ...rest }) => {\n    //console.log('this is record ===>',record.activate);\n    return record.activate\n        ? <Button disalbed label=\"Approve\" style={disablestyle} disabled={true} source=\"true\"/>\n        : <Button label=\"Approve\" style={style} disabled={false} source=\"false\" onClick={() => Methods.setApprove(record)}/>;\n}\n\nApproveButton.defaultProps = {\n    addLabel: true,\n};\n\nexport default ApproveButton;","import React from 'react';\nimport {\n  Button\n} from 'react-admin';\nimport Methods from '../lib/methods';\n\nconst style = {backgroundColor:'red', width: 120, height: 35, textAlign: 'center', color: 'white'};\nconst disablestyle = {backgroundColor:'darkGray', width: 120, height: 35, textAlign: 'center', color: 'white'};\nconst RejectButton = ({ record, ...rest }) => {\n    //console.log('this is record record===>',record.activate);\n    return record.activate\n        ? <Button label=\"REJECT\" style={style} disabled={false} source=\"true\" onClick={() => Methods.setReject(record)}/>\n        : <Button label=\"REJECT\" style={disablestyle} disabled={true} source=\"false\"/>;\n}\n\nRejectButton.defaultProps = {\n    addLabel: true,\n};\n\nexport default RejectButton;","import React from 'react';\nimport {\n  List,\n  ImageField,\n  Datagrid,\n  TextField,\n  BooleanField,\n  Show,\n  SimpleShowLayout,\n  SaveButton,\n  Button\n} from 'react-admin';\nimport {CommentField, AudioPlayerField, ConditionBooleanField, CommentListField, ApproveButton, RejectButton} from '../components';\n// username, email,  user photo, location, birthdate, approved\nexport const UserList = props => (\n  <List {...props} title=\"UserList\" bulkActionButtons={false}>\n    <Datagrid rowClick=\"show\">\n      <TextField label=\"Userid\" source=\"userId\" />\n      <TextField label=\"Name\" source=\"fname\" />\n      <ImageField label=\"UserPhoto\" source=\"dpLarge\" />\n      <TextField label=\"Email\" source=\"email\" />\n      <TextField label=\"Username\" source=\"username\" />\n      <TextField label=\"Location\" source=\"locationText\" />\n      <ConditionBooleanField label=\"Approved Status\" source=\"activate\"/>\n      <ApproveButton label=\"Approve\" source=\"activate\"/>\n      <RejectButton label=\"Reject\" source=\"activate\"/>\n    </Datagrid>\n  </List>\n);\n\nexport const UserShow = props => (\n  <Show {...props}  title=\"UserInformation\">\n    <SimpleShowLayout>\n      <TextField label=\"Userid\" source=\"userId\" />\n      <TextField label=\"Name\" source=\"name\" />\n      <ImageField label=\"UserPhoto\" source=\"dpLarge\" />\n      <TextField label=\"Email\" source=\"email\" />\n      <TextField label=\"Username\" source=\"username\" />\n      <TextField label=\"Location\" source=\"locationText\" />\n      <ConditionBooleanField label=\"Approved Status\" source=\"Approve\"/>\n    </SimpleShowLayout>\n  </Show>\n);\n","import React from 'react';\n\nimport { Admin, Resource } from 'react-admin';\n// import { RestProvider, AuthProvider, base64Uploader } from 'ra-data-firestore-client';\nimport { RestProvider, AuthProvider } from './lib'\n\nimport { UserList, UserShow } from './models';\n\n//import firebaseDataProvider from 'ra-data-firebase-client'\nimport firebase from 'firebase/app'\nimport \"firebase/database\";\nimport jsonServerProvider from 'ra-data-json-server';\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDDnRZpuDk5btMYC0dNW_yzn7fKzLFfb98\",\n  authDomain: \"yet-met-7eb60.firebaseapp.com\",\n  databaseURL: \"https://yet-met-7eb60-default-rtdb.firebaseio.com\",\n  projectId: \"yet-met-7eb60\",\n  storageBucket: \"yet-met-7eb60.appspot.com\",\n  messagingSenderId: \"724415903789\",\n  appId: \"1:724415903789:web:670dfb47c336de81a060a4\"\n};\n\nconst trackedResources = [{ name: 'users', path: 'users' }];\nfirebase.initializeApp(firebaseConfig);\n\nconst authConfig = {\n  userProfilePath: '/users/',\n  userAdminProp: 'isAdmin'\n};\n\nconst dataProvider = RestProvider(firebaseConfig, { trackedResources });\n//const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\nconst App = () => (\n  <Admin dataProvider={dataProvider} authProvider={AuthProvider(authConfig)}>\n    <Resource name=\"users\" options={{ label: 'UserList'}} list={UserList}/>\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}